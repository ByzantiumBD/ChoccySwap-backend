module;

import lib.ft4.prioritization;
import lib.ft4.assets;
import lib.ft4.accounts;
import lib.ft4.accounts.strategies;
import lib.ft4.accounts.strategies.transfer.fee;
import external;
import extensions;
import pairs;
import orderbook;
import vault_support;

object chain_stats {
    mutable executed_orders: integer = 0;
    mutable executed_swaps: integer = 0;
    mutable registered_accounts: integer = 0;
    mutable registered_assets: integer = 0;
    mutable registered_pairs: integer = 0;
}

object cusd {
    mutable assets.asset = register_asset_if_needed(
        "empty",
        "EMPTY",
        18,
        "https://www.choc.cy/empty.svg"
    );
}

function register_asset_if_needed(
    asset_name: name,
    symbol: text,
    decimals: integer,
    icon_url: text
): assets.asset {
    // derive id of the asset
    val asset_id = (asset_name, chain_context.blockchain_rid).hash();
    // check if asset already exist
    val a = assets.asset @ ? { .id == asset_id };
    if (a??)
        return a;

    chain_stats.registered_assets += 1;
    return assets.Unsafe.register_asset(
            asset_name,
            symbol,
            decimals,
            chain_context.blockchain_rid,
            icon_url
        );
}

@extend(strategies.after_register_account)
function (accounts.account) {
    chain_stats.registered_accounts += 1;
}
