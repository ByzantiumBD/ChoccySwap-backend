module;

enum dapp_content_type {
    landscape,
    portrait,
    promotional,
    video,
    icon
}

struct dapp_media {
    name: text;
    url: text;
    type: dapp_content_type;
}

query find_dapp_details(dapp_rowid: rowid, requested_content_types: list<dapp_content_type>? = null) {
    return (
        rowid = 123, // random value
        name = "ChoccySwap", // name of the project
        description = "ChoccySwap, the sweetest DEX on Chromia!", // description of the project
        launch_url = "https://www.choc.cy", // launch url of the project
        genre = "DEX",
        chain_list = [
            (
            name = "choccy_swap", // name of the blockchain which is listed in the chromia.yml file of your dapp
            brid = byte_array("FA289E086E3D6C3277336E270BADDF75035C1F049F242AB2CF61773D2822213D"), // brid of the deployed blockchain. This brid can be found in the termanal when the dapp gets deployed into the container
            role = "unspecified"
            )
        ],
        content = get_dapp_media(requested_content_types)
    ).to_gtv_pretty();
}

function get_dapp_media(requested_content_types: list<dapp_content_type>? = null): list<dapp_media>? {

    val ec_media: map<dapp_content_type, dapp_media> = [
        dapp_content_type.icon: dapp_media(name = "icon1", url = "https://www.choc.cy/icon_vault.svg", dapp_content_type.icon), // url of the media
        dapp_content_type.landscape: dapp_media(name = "landscape1", url = "https://www.choc.cy/landscape_vault.png", dapp_content_type.landscape), // url of the media
        dapp_content_type.portrait: dapp_media(name = "portrait1", url = "https://www.choc.cy/portrait_vault.png", dapp_content_type.portrait), // url of the media
        dapp_content_type.promotional: dapp_media(name = "promotional1", url = "https://www.choc.cy/promotional_vault.png", dapp_content_type.promotional), // url of the media
    ];

    if (not empty(requested_content_types)) {

        val media = list<dapp_media>();

        for (type_requested in requested_content_types) {
            if (ec_media.contains(type_requested)) {
                media.add(ec_media[type_requested]);
            }
        }

        return if (media.size() > 0) media else null;
    }

    return null;
}